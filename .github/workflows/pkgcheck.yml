name: CI Pkgcheck
on: [push, pull_request]
jobs:
  ci-pkgcheck:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [
          Ubuntu GCC,
          Ubuntu GCC AARCH64,
          Ubuntu GCC PPC
        ]
        include:
          - name: Ubuntu GCC
            os: ubuntu-latest
            compiler: gcc
            packages: ninja-build

          - name: Ubuntu GCC AARCH64
            os: ubuntu-latest
            chost: aarch64-linux-gnu
            compiler: aarch64-linux-gnu-gcc
            cmake-args: -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-aarch64.cmake
            packages: ninja-build qemu gcc-aarch64-linux-gnu libc-dev-arm64-cross

          - name: Ubuntu GCC PPC
            os: ubuntu-latest
            chost: powerpc-linux-gnu
            compiler: powerpc-linux-gnu-gcc
            cmake-args: -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-powerpc.cmake
            packages: ninja-build qemu gcc-powerpc-linux-gnu libc-dev-powerpc-cross

    steps:
    - name: Checkout repository
      uses: actions/checkout@v1

    - name: Install packages (Ubuntu)
      if: runner.os == 'Linux' && matrix.packages
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.packages }}
        sudo apt-get install -y diffoscope || true

    - name: Compare output of configure and cmake
      run: |
        mkdir ${{ matrix.build-dir || '.not-used' }}
        cd ${{ matrix.build-dir || '.' }}
        sh ${{ matrix.build-src-dir || '.' }}/test/pkgcheck.sh
      env:
        CC: ${{ matrix.compiler }}
        CHOST: ${{ matrix.chost }}
        CMAKE_ARGS: ${{ matrix.cmake-args }}
